{"version":3,"sources":["components/Page.tsx","views/noMatch.tsx","components/Wrapper.tsx","components/Title.tsx","components/Nav.tsx","components/NavLink.tsx","App.tsx","views/home.tsx","views/about.tsx","serviceWorker.ts","index.tsx"],"names":["styled","div","Page","title","h1","useState","React","Nav","props","count","setCount","type","onClick","children","NavLink","active","path","exact","match","to","routes","component","App","Wrapper","titleTemplate","Title","map","route","i","key","NoMatch","Boolean","window","location","hostname","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gdAEeA,UAAOC,IAAtB,KCEe,oBACb,gBAACC,EAAD,KACE,mCACA,gBAAC,IAAD,CAAQC,MAAM,U,6LCLHH,UAAOC,IAAtB,K,wICAeD,UAAOI,GAAtB,K,yBCAOC,EAAYC,WAiBJC,EAZH,SAACC,GAAgB,IAAD,EACAH,EAAS,GADT,mBACnBI,EADmB,KACZC,EADY,KAE1B,OACE,2BACE,wCAAgBD,EAAhB,UACA,qBAAQE,KAAK,UAAUC,QAAS,kBAAMF,EAASD,EAAQ,KAAvD,gBAGED,EAAMK,W,yTCXd,IAAMC,EAAUd,IAAOC,IAAV,KAGA,SAACO,GAAD,OAAeA,EAAMO,OAAS,UAAY,UAG5B,SAACP,GAAD,OAAeA,EAAMO,OAAS,uBAAyB,iBAEnE,SAACP,GAAD,OAAeA,EAAMO,OAAS,UAAY,UAK1C,kBAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,MAAUT,EAAlB,uCACb,gBAAC,IAAD,CAAOQ,KAAMA,EAAMC,MAAOA,EAAOJ,SAAU,gBAAEK,EAAF,EAAEA,MAAF,OACzC,gBAACJ,EAAD,CAASC,OAAQG,GACf,gBAAC,IAAD,CAAMC,GAAIH,GAAOR,EAAML,YCRvBiB,EAAS,CACb,CACEjB,MAAO,OACPa,KAAM,IACNK,UCZW,kBACb,gBAACnB,EAAD,KACE,yCAAgB,sCAAhB,UACA,u5BACA,8eACA,4yBACA,giBACA,ucACA,snBACA,gBAAC,IAAD,CAAQC,MAAM,WDIdc,OAAO,GACN,CACDd,MAAO,QACPa,KAAM,SACNK,UEjBW,kBACb,gBAACnB,EAAD,KACE,yCAAgB,uCAAhB,UACA,63BACA,2xBACA,ssBACA,qdACA,8yBACA,gkBACA,gBAAC,IAAD,CAAQC,MAAM,cFqCHmB,E,iLAvBX,OACE,gBAAC,IAAD,KACE,gBAACC,EAAD,KACE,gBAAC,IAAD,CAAQC,cAAa,eAnBjB,yBAoBJ,gBAACC,EAAD,aACA,gBAAC,EAAD,KACE,wCACCL,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,gBAAC,EAAD,eAASC,IAAKD,GAAOD,QAGzB,gBAAC,IAAD,KACGP,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,gBAAC,IAAD,eAAOX,OAAK,EAACY,IAAKD,GAAOD,OAE3B,gBAAC,IAAD,CAAON,UAAWS,W,GAjBZxB,aGbEyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DCZNiB,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmIlC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.852f51fe.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n  h1 {\n    font-size: 5vmin;\n    font-weight: normal;\n    color: #0000ff;\n  }\n  p {\n    font-size: 0.9375rem;\n  }\n`","import  * as React from 'react'\nimport Helmet from 'react-helmet'\nimport Page from '../components/Page'\n\nexport default () => (\n  <Page>\n    <h1>404?!</h1>\n    <Helmet title='404' />\n  </Page>\n)","import styled from 'styled-components';\n\nexport default styled.div`\n  padding: 4rem 1rem;\n  margin: 0 auto;\n  @media (min-width: 801px) {\n    width: 80vw;\n  }\n  max-width: 1140px;\n`","import styled from 'styled-components';\n\nexport default styled.h1`\n  font-size: 10vmin;\n  line-height: 1em;\n  font-weight: bold;\n`","import  * as React from 'react';\nimport {Button} from 'antd';\nconst {useState} = React;\n\ninterface IProps {\n  children: any;\n}\nconst Nav = (props:IProps)=>{\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <Button type='primary' onClick={() => setCount(count + 1)}>\n        点击\n      </Button>\n       {props.children}\n    </div>\n  );\n}\nexport default Nav;","import  * as React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst NavLink = styled.div`\n  a {\n    transition: color 0.2s, border-bottom-color 0.2s;\n    color: ${(props:any) => props.active ? '#0000ff' : '#666'};\n    text-decoration: none;\n    border-bottom: 2px solid;\n    border-bottom-color: ${(props:any) => props.active ? 'rgba(0, 0, 255, 0.1)' : 'transparent'};\n    &:hover, &:active, &:focus {\n      color: ${(props:any) => props.active ? '#0000ff' : '#222'};\n    }\n  }\n`\n\nexport default ({path, exact, ...props}:any) => (\n  <Route path={path} exact={exact} children={({match}) => (\n    <NavLink active={match}>\n      <Link to={path}>{props.title}</Link>\n    </NavLink>\n  )} />\n)\n","import * as React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport Home from './views/home';\nimport About from './views/about';\nimport NoMatch from './views/noMatch';\nimport Wrapper from './components/Wrapper'\nimport Title from './components/Title'\nimport Nav from './components/Nav';\nimport NavLink from './components/NavLink'\n\nconst title = 'You Are Doing Great'\nconst routes = [\n  {\n    title: 'Home',\n    path: '/',\n    component: Home,\n    exact: true\n  }, {\n    title: 'About',\n    path: '/about',\n    component: About\n  }\n]\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Router>\n        <Wrapper>\n          <Helmet titleTemplate={`%s - ${title}`} />\n          <Title>YADG</Title>\n          <Nav>\n            <h1>Navigation</h1>\n            {routes.map((route, i) => (\n              <NavLink key={i} {...route} />\n            ))}\n          </Nav>\n          <Switch>\n            {routes.map((route, i) => (\n              <Route exact key={i} {...route} />\n            ))}\n            <Route component={NoMatch} />\n          </Switch>\n        </Wrapper>\n      </Router>\n    )\n  }\n}\n\nexport default App","import  * as React from 'react'\nimport Helmet from 'react-helmet'\nimport Page from '../components/Page'\n\nexport default () => (\n  <Page>\n    <h1>This is the <strong>Home</strong> view.</h1>\n    <p>Scelerisque venenatis nibh fames ad quam feugiat leo commodo vitae sed lacus duis habitant maecenas sem interdum quisque duis mauris scelerisque scelerisque dui elit a condimentum vestibulum ad vestibulum. Laoreet nostra dui vivamus vestibulum integer taciti suscipit consectetur in a nullam quam nam ad nunc class nec ullamcorper urna sed nascetur ad. Vestibulum a sem leo nunc condimentum vestibulum euismod sapien aenean adipiscing a mi volutpat non fames. Adipiscing parturient parturient sit nec viverra tristique dui senectus commodo sem eu vestibulum vestibulum lorem ullamcorper. A quis a volutpat posuere suspendisse commodo nec elit parturient parturient sit ac sed suspendisse nam ullamcorper. Sit in a ut vivamus fringilla penatibus suspendisse scelerisque eu bibendum a egestas sodales vel rhoncus phasellus suspendisse faucibus viverra ultricies fusce laoreet libero a taciti.</p>\n    <p>Elementum cras id suspendisse mi ut eros elit a enim curabitur posuere adipiscing eleifend auctor dictumst hac porttitor iaculis dis. Ut porttitor neque etiam primis et vestibulum parturient consectetur a etiam class consectetur a in massa parturient hac sed litora massa. Arcu enim arcu ac interdum ullamcorper consectetur aptent natoque curae mattis adipiscing a non metus netus arcu accumsan nam quisque condimentum posuere platea congue nisl mollis id nascetur.</p>\n    <p>Facilisis diam adipiscing ut eu porta cubilia donec scelerisque suspendisse suspendisse parturient a elit adipiscing in eu porttitor at suspendisse suspendisse placerat. Faucibus vestibulum habitasse ac dignissim a interdum fringilla nisi tortor eget dictum netus curae a pulvinar semper feugiat pharetra. Cras facilisis feugiat mi urna nec porttitor id leo suspendisse suspendisse phasellus parturient lacus lobortis condimentum a mus. Mi nam phasellus ridiculus est nisl nullam maecenas eu a erat proin facilisis at massa sit ac aenean tempus sed pharetra curabitur gravida nulla dapibus in. Dolor venenatis sit ullamcorper suspendisse eu ac ridiculus a adipiscing et a suscipit lectus turpis volutpat lectus tincidunt per rutrum vestibulum consectetur consectetur adipiscing quam.</p>\n    <p>Ullamcorper enim morbi adipiscing ac lacinia vestibulum tempor a pulvinar mauris natoque litora lectus a senectus. Parturient a sagittis viverra consectetur convallis in auctor dapibus vestibulum facilisi parturient ullamcorper vulputate a ullamcorper pulvinar justo platea fermentum aptent. Lectus condimentum vestibulum ut faucibus vulputate a feugiat aliquet faucibus platea iaculis sed condimentum vulputate scelerisque a eu in mi ullamcorper scelerisque adipiscing et fames parturient mollis adipiscing varius.</p>\n    <p>Donec et pulvinar mi elementum parturient penatibus id dui scelerisque adipiscing egestas urna pharetra praesent scelerisque. Ullamcorper quis hendrerit a elit mi sit dis vestibulum fringilla mi pulvinar in erat aptent vestibulum nisi a enim vestibulum parturient. Laoreet ad in aliquet magna accumsan donec fringilla tellus consectetur vulputate dui interdum nisl sociis aliquam sociis adipiscing quisque adipiscing et velit.</p>\n    <p>Sit vitae id ullamcorper adipiscing adipiscing nunc a vitae litora dolor consectetur primis parturient ligula. Sit porttitor luctus hac eu purus parturient phasellus ullamcorper eros hac malesuada aliquet suspendisse duis laoreet cum augue proin consectetur feugiat a scelerisque taciti ullamcorper parturient. Ut vel parturient parturient consectetur vel eros quisque tellus etiam parturient integer eleifend quisque condimentum faucibus congue nisi facilisi quam a pharetra viverra montes. Ad magna a curae turpis auctor condimentum nulla massa ligula himenaeos tempor a integer condimentum integer.</p>\n    <Helmet title='Home' />\n  </Page>\n)","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport Page from '../components/Page';\n\nexport default () => (\n  <Page>\n    <h1>This is the <strong>About</strong> view.</h1>\n    <p>Ante himenaeos a vestibulum dignissim cursus porta a amet blandit massa netus parturient ac diam faucibus a vestibulum scelerisque dapibus ante vivamus praesent diam. Est duis dapibus parturient a a tristique duis adipiscing nam vivamus natoque habitasse suspendisse eu curabitur pretium scelerisque sodales consectetur est a augue conubia natoque penatibus ligula lacus. Parturient sagittis vulputate parturient urna ipsum aliquam suspendisse diam adipiscing at a massa urna maecenas litora inceptos pulvinar tempus odio pharetra mi platea nunc viverra. Parturient venenatis ipsum suspendisse ullamcorper nam himenaeos natoque sem auctor non et odio ridiculus elit volutpat vestibulum nisl a vestibulum libero cum molestie vestibulum. Condimentum sem magnis erat curae duis ut gravida parturient accumsan egestas a vestibulum suscipit a a at turpis varius sociis.</p>\n    <p>Quisque aliquet rhoncus est quisque torquent velit orci luctus consectetur pharetra consectetur ac proin cras a consequat scelerisque dictumst faucibus. Id condimentum consectetur gravida donec cursus duis a vehicula parturient volutpat euismod habitant litora vestibulum a ad vestibulum sed. Dui amet nam vestibulum ipsum consectetur dapibus eu tempus vel a nec proin ornare nibh. Nunc cras tristique a eu non nunc auctor phasellus nisi porttitor tempus ad sodales at. A parturient adipiscing non neque morbi felis libero taciti fusce quisque tortor a posuere augue diam placerat vestibulum varius montes suspendisse parturient id. Iaculis suspendisse consectetur vitae libero a lectus quisque enim vulputate adipiscing fames viverra gravida vestibulum ullamcorper.</p>\n    <p>Accumsan dui nullam id suspendisse vestibulum fames lobortis id sit vehicula pretium mus accumsan non volutpat mi. Ad orci ligula dis venenatis a maecenas tempor per nullam egestas vestibulum penatibus a suspendisse vel nulla tempus per scelerisque elit sed quisque sapien vestibulum ac cum enim a. Eleifend quam vestibulum diam suspendisse eu inceptos est iaculis in eros vestibulum velit class a massa diam potenti. Parturient ligula a diam integer nullam vestibulum platea ad donec a a inceptos ac cubilia condimentum habitant in ridiculus quisque sit. Duis sit mi augue leo adipiscing condimentum nostra a eu adipiscing sapien massa felis vestibulum senectus et taciti sodales.</p>\n    <p>Iaculis ac vestibulum ullamcorper parturient et dis a parturient congue enim ante nostra adipiscing lobortis a. Ullamcorper condimentum aliquet in commodo ligula velit himenaeos ad metus interdum eu fringilla mi vulputate eu platea sed integer. Gravida pulvinar per nisi fames nascetur ut metus ipsum leo scelerisque habitasse iaculis enim ad luctus molestie vestibulum a montes suspendisse nisi eget primis eleifend quisque dui parturient.</p>\n    <p>Cum class adipiscing aenean primis sed a ultricies himenaeos senectus bibendum interdum vel eleifend at justo. At ultricies posuere ullamcorper turpis praesent quam curae convallis suspendisse nullam parturient consequat sem condimentum rutrum eget. Luctus turpis facilisi potenti condimentum consectetur euismod ut in eu ac fringilla pulvinar a magna. Nisi gravida eu quisque egestas adipiscing adipiscing magna nam integer suspendisse et cubilia parturient nisl ut in suscipit a sit dapibus vestibulum nec condimentum a a. Eros libero ac quis vestibulum potenti lorem a a consectetur facilisis porta ultrices at sodales. Vestibulum adipiscing iaculis velit lacus mollis consectetur scelerisque mattis sapien parturient porta bibendum ultricies id urna ligula gravida curae facilisis.</p>\n    <p>A sem vel nec sodales mi vivamus senectus sed potenti a parturient nascetur tincidunt nisi pulvinar rhoncus a. Risus imperdiet taciti suspendisse facilisi a per metus cubilia varius a nostra adipiscing amet ultrices quisque ac mi a. Dictumst a ultrices mi a dignissim ad fermentum eget a nam et a blandit scelerisque. Taciti lorem tempor quam vestibulum dis habitasse vestibulum diam vel est ut proin dis auctor. Suscipit scelerisque orci magna interdum vel bibendum duis netus a consectetur dui magnis ac aliquet sem posuere tincidunt vestibulum.</p>\n    <Helmet title='About' />\n  </Page>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n//只在 https 环境中运行，防止有人劫持链接\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}